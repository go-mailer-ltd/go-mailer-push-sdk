// Generated by view binder compiler. Do not edit!
package com.example.push_test_android_example.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.push_test_android_example.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputEditText;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final MaterialButton btnRequestPermission;

  @NonNull
  public final MaterialButton btnSendUserData;

  @NonNull
  public final MaterialButton btnSwitchEnvironment;

  @NonNull
  public final MaterialButton btnTestCompleteFlow;

  @NonNull
  public final MaterialButton btnTrackEvents;

  @NonNull
  public final TextInputEditText etEmail;

  @NonNull
  public final TextView tvEnvironmentBadge;

  @NonNull
  public final TextView tvEnvironmentDescription;

  @NonNull
  public final TextView tvEnvironmentEndpoint;

  @NonNull
  public final TextView tvEventStatus;

  @NonNull
  public final TextView tvNotificationStatus;

  @NonNull
  public final TextView tvUserStatus;

  private ActivityMainBinding(@NonNull ScrollView rootView,
      @NonNull MaterialButton btnRequestPermission, @NonNull MaterialButton btnSendUserData,
      @NonNull MaterialButton btnSwitchEnvironment, @NonNull MaterialButton btnTestCompleteFlow,
      @NonNull MaterialButton btnTrackEvents, @NonNull TextInputEditText etEmail,
      @NonNull TextView tvEnvironmentBadge, @NonNull TextView tvEnvironmentDescription,
      @NonNull TextView tvEnvironmentEndpoint, @NonNull TextView tvEventStatus,
      @NonNull TextView tvNotificationStatus, @NonNull TextView tvUserStatus) {
    this.rootView = rootView;
    this.btnRequestPermission = btnRequestPermission;
    this.btnSendUserData = btnSendUserData;
    this.btnSwitchEnvironment = btnSwitchEnvironment;
    this.btnTestCompleteFlow = btnTestCompleteFlow;
    this.btnTrackEvents = btnTrackEvents;
    this.etEmail = etEmail;
    this.tvEnvironmentBadge = tvEnvironmentBadge;
    this.tvEnvironmentDescription = tvEnvironmentDescription;
    this.tvEnvironmentEndpoint = tvEnvironmentEndpoint;
    this.tvEventStatus = tvEventStatus;
    this.tvNotificationStatus = tvNotificationStatus;
    this.tvUserStatus = tvUserStatus;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnRequestPermission;
      MaterialButton btnRequestPermission = ViewBindings.findChildViewById(rootView, id);
      if (btnRequestPermission == null) {
        break missingId;
      }

      id = R.id.btnSendUserData;
      MaterialButton btnSendUserData = ViewBindings.findChildViewById(rootView, id);
      if (btnSendUserData == null) {
        break missingId;
      }

      id = R.id.btnSwitchEnvironment;
      MaterialButton btnSwitchEnvironment = ViewBindings.findChildViewById(rootView, id);
      if (btnSwitchEnvironment == null) {
        break missingId;
      }

      id = R.id.btnTestCompleteFlow;
      MaterialButton btnTestCompleteFlow = ViewBindings.findChildViewById(rootView, id);
      if (btnTestCompleteFlow == null) {
        break missingId;
      }

      id = R.id.btnTrackEvents;
      MaterialButton btnTrackEvents = ViewBindings.findChildViewById(rootView, id);
      if (btnTrackEvents == null) {
        break missingId;
      }

      id = R.id.etEmail;
      TextInputEditText etEmail = ViewBindings.findChildViewById(rootView, id);
      if (etEmail == null) {
        break missingId;
      }

      id = R.id.tvEnvironmentBadge;
      TextView tvEnvironmentBadge = ViewBindings.findChildViewById(rootView, id);
      if (tvEnvironmentBadge == null) {
        break missingId;
      }

      id = R.id.tvEnvironmentDescription;
      TextView tvEnvironmentDescription = ViewBindings.findChildViewById(rootView, id);
      if (tvEnvironmentDescription == null) {
        break missingId;
      }

      id = R.id.tvEnvironmentEndpoint;
      TextView tvEnvironmentEndpoint = ViewBindings.findChildViewById(rootView, id);
      if (tvEnvironmentEndpoint == null) {
        break missingId;
      }

      id = R.id.tvEventStatus;
      TextView tvEventStatus = ViewBindings.findChildViewById(rootView, id);
      if (tvEventStatus == null) {
        break missingId;
      }

      id = R.id.tvNotificationStatus;
      TextView tvNotificationStatus = ViewBindings.findChildViewById(rootView, id);
      if (tvNotificationStatus == null) {
        break missingId;
      }

      id = R.id.tvUserStatus;
      TextView tvUserStatus = ViewBindings.findChildViewById(rootView, id);
      if (tvUserStatus == null) {
        break missingId;
      }

      return new ActivityMainBinding((ScrollView) rootView, btnRequestPermission, btnSendUserData,
          btnSwitchEnvironment, btnTestCompleteFlow, btnTrackEvents, etEmail, tvEnvironmentBadge,
          tvEnvironmentDescription, tvEnvironmentEndpoint, tvEventStatus, tvNotificationStatus,
          tvUserStatus);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
